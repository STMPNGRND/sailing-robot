#!/usr/bin/env python
"""Node steps through a series of tasks to perform.

Tasks (or waypoints) are loaded from parameters, and then each one is used to
calculate sailing_state and goal_heading until its check_end_condition()
returns True.
"""

import rospy
from std_msgs.msg import Float32
from std_msgs.msg import Float64
from std_msgs.msg import String
import sailing_robot
from sailing_robot.tasks import tasks_from_wps
from sailing_robot.tasks_ros import RosTasksRunner
from sailing_robot.navigation import Navigation
from sensor_msgs.msg import NavSatFix


def goal_heading_publisher(tasks_runner):
    pub = rospy.Publisher("goal_heading", Float32, queue_size=10)
    pub_state = rospy.Publisher("sailing_state", String, queue_size=10)
    rate = rospy.Rate(rospy.get_param("config/rate"))

    tasks_runner.start_next_task()
    while not rospy.is_shutdown():
        state, goal_heading = tasks_runner.calculate_state_and_goal()
        pub.publish(goal_heading)
        pub_state.publish(state)
        rate.sleep()


if __name__ == '__main__':
    try:
        rospy.init_node("publish_goal_heading", anonymous=True)
        #tasks = rospy.get_param("tasks")
        tasks = tasks_from_wps(rospy.get_param("wp"))
        nav_options = rospy.get_param("navigation")
        nav = Navigation()#**nav_options)
        tasks_runner = RosTasksRunner(tasks, nav)
        tasks_runner.nav.subscribe_topics()
        goal_heading_publisher(tasks_runner)
    except rospy.ROSInterruptException:
        pass
